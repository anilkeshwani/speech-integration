# Experiment management
extended_models_dir: /mnt/scratch-artemis/anilkeshwani/models/extended/
model_name: Llama-3.2-1B-5000-dsus
experiments_root_dir: /mnt/scratch-artemis/anilkeshwani/experiments
output_dir: ${experiments_root_dir}/${model_name}

# DSUs
n_dsus: 5000

# Tokenizer - config for setup_llama3_tokenizer -> Llama3Tokenizer
tokenizer:
  path: ${extended_models_dir}/${model_name}/original/tokenizer.model
  max_seq_len: null # NOTE max seq. length 128_000_000 returned by `llama model describe -m Llama3.2-1B`
  prompt_template: null
  verbose: True

# Data: NOTE Arguments to setup_data, not SFTDataset
data:
  train:
    # SFTDataset
    source: anilkeshwani/MLS_english_train_strat_sample_aligned_hubert
    # model_tokenizer taken from code
    inference: False # False for training, False for validation loss, toggled to True in code for validation inference
    filter_fn: null
    train_on_input: True # set to true to prevent forgetting; will hyperparam. search over this
    column_map:
      input: speech_tokens
      output: transcript
    new_system_prompt: "You will act as an automatic speech recognition (ASR) system. Transcribe the speech tokens into English text."
    image_dir: null

    # SFTDataset kwargs passed to datasets.load_dataset
    split: train

    # not arguments to SFT dataset:
    batch_size: 4 # passed to DataLoader
    shuffle: True # passed to DistributedSampler
    packed: False # passed to pack_dataset to create a PackedDataset
  dev:
    # SFTDataset
    source: anilkeshwani/MLS_english_train_strat_sample_aligned_hubert
    # model_tokenizer taken from code
    inference: False # False for training, False for validation loss, toggled to True in code for validation inference
    filter_fn: null
    train_on_input: True # set to true to prevent forgetting; will hyperparam. search over this
    column_map:
      input: speech_tokens
      output: transcript
    new_system_prompt: "You will act as an automatic speech recognition (ASR) system. Transcribe the speech tokens into English text."
    image_dir: null

    # SFTDataset kwargs passed to datasets.load_dataset
    split: dev # <- NOTE different from train

    # not arguments to SFT dataset:
    batch_size: 4 # passed to DataLoader
    shuffle: False # passed to DistributedSampler # <- NOTE different from train
    packed: False # passed to pack_dataset to create a PackedDataset

# Optimization
optimizer:
  lr: 2e-5
  betas: [0.9, 0.999]
  eps: 1e-8
  weight_decay: 0.01
  amsgrad: False
  fused: True
epochs: 5
max_steps: null # if unset, set according to the number of epochs and the number of steps per epoch
batch_size: 4
gradient_accumulation_steps: 16
clip_grad_norm: null

# Learning rate scheduler
lr_scheduler:
  num_warmup_steps: 0
  num_cycles: 0.5

# Performance optimizations
optimizer_in_bwd: False # https://pytorch.org/tutorials/intermediate/optimizer_step_in_backward_tutorial.html
compile: False # set it to True for better memory and performance
# Memory management
enable_activation_checkpointing: False # True reduces memory
enable_activation_offloading: False # True reduces memory

# Training environment
device: cuda

# Reduced precision
dtype: bf16

# Checkpointing
checkpointer:
  checkpoint_dir: ???
  checkpoint_files: ???
  config_json: ???
  output_dir: null # if null, set in code to ${experiments_root_dir}/${model_name}/${experiment_name}/checkpoints
  recipe_checkpoint: null
  adapter_checkpoint: null
  model_type: "llama3_2"
  safe_serialization: True

save_steps: 500 # checkpoint save frequency

# Evaluation
eval_steps: ${save_steps} # evaluation frequency

# Logging
wandb:
  log_dir: ${output_dir}/wandb
  project: speech-integration
  entity: null # automatically set to username based on API key
  group: null
log_interval: 1
log_peak_memory_stats: False
